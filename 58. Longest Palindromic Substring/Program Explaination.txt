âœ… Java Code (Clean, Fast, Accurate Parsing)

class Solution {
    public String longestPalindrome(String s) {
        if (s == null || s.length() < 1) return "";

        int start = 0, end = 0;

        for (int i = 0; i < s.length(); i++) {
            int len1 = expandAroundCenter(s, i, i);     // Odd length
            int len2 = expandAroundCenter(s, i, i + 1); // Even length
            int len = Math.max(len1, len2);

            if (len > end - start) {
                start = i - (len - 1) / 2;
                end = i + len / 2;
            }
        }

        return s.substring(start, end + 1);
    }

    private int expandAroundCenter(String s, int left, int right) {
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            left--;
            right++;
        }
        return right - left - 1;
    }
}


ðŸ“˜ Explanation (Line-by-Line)

if (s == null || s.length() < 1) return "";
ðŸ”¹ Empty string or null ke case mein return empty.

int start = 0, end = 0;
ðŸ”¹ Longest palindrome ka start and end index track karne ke liye.

for (int i = 0; i < s.length(); i++)
ðŸ”¹ Har character ko center maan kar palindrome expand karenge.

expandAroundCenter(s, i, i);
ðŸ”¹ Odd length palindrome ke liye (center ek character).

expandAroundCenter(s, i, i + 1);
ðŸ”¹ Even length palindrome ke liye (center do characters).

int len = Math.max(len1, len2);
ðŸ”¹ Dono length compare karke max choose kiya.

if (len > end - start)
ðŸ”¹ Agar yeh palindrome ab tak ke longest se bada hai toh start/end update karo.

return s.substring(start, end + 1);
ðŸ”¹ Final longest palindrome substring return karo.

Function: expandAroundCenter

while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right))
ðŸ”¹ Jab tak left == right, expand karo.

return right - left - 1;
ðŸ”¹ Palindrome ka actual length return karo.

ðŸ§  Example

Input: babad
Possible palindromes: bab, aba
âœ… Output: bab or aba (both correct)

ðŸš€ Time and Space Complexity

Time: O(nÂ²) â†’ Nested expansion for each character
Space: O(1) â†’ No extra space used

ðŸ”— If any need please ask me:
https://www.linkedin.com/in/saurabh884095/