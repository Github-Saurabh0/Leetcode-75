LeetCode 297 â€“ Serialize and Deserialize Binary Tree 

public class Codec {
    
    // Serialize â†’ Tree to String
    public String serialize(TreeNode root) {
        if (root == null) return "null";

        StringBuilder sb = new StringBuilder();
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);

        while (!q.isEmpty()) {
            TreeNode node = q.poll();
            if (node == null) {
                sb.append("null,");
                continue;
            }
            sb.append(node.val).append(",");
            q.offer(node.left);
            q.offer(node.right);
        }

        return sb.toString();
    }

    // Deserialize â†’ String to Tree
    public TreeNode deserialize(String data) {
        if (data.equals("null")) return null;

        String[] vals = data.split(",");
        TreeNode root = new TreeNode(Integer.parseInt(vals[0]));
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        int i = 1;

        while (!q.isEmpty()) {
            TreeNode curr = q.poll();
            if (!vals[i].equals("null")) {
                curr.left = new TreeNode(Integer.parseInt(vals[i]));
                q.offer(curr.left);
            }
            i++;
            if (!vals[i].equals("null")) {
                curr.right = new TreeNode(Integer.parseInt(vals[i]));
                q.offer(curr.right);
            }
            i++;
        }

        return root;
    }
}

Explanation
ðŸ”¸ serialize() â€“ Tree ko string mein convert karta hai

if (root == null) return "null";
ðŸ”¹ Agar root hi null hai to null string return karo.

StringBuilder sb = new StringBuilder();
Queue<TreeNode> q = new LinkedList<>();
ðŸ”¹ Level order ke liye queue banayi.

q.offer(root);
ðŸ”¹ Root node queue mein daala.

while (!q.isEmpty())
ðŸ”¹ Jab tak queue khali na ho

TreeNode node = q.poll();
ðŸ”¹ Queue ka front node nikala.

if (node == null)
    sb.append("null,");
ðŸ”¹ Null node mila toh "null" likh diya.

else:
    sb.append(node.val).append(",");
    q.offer(node.left);
    q.offer(node.right);
ðŸ”¹ Value likhi aur uske dono children ko queue mein daal diya.
ðŸ”¸ deserialize() â€“ String ko tree mein wapas convert karta hai

if (data.equals("null")) return null;
ðŸ”¹ Agar string hi null thi, return null root.

String[] vals = data.split(",");
ðŸ”¹ Saare values ko comma ke basis par split kiya.

TreeNode root = new TreeNode(Integer.parseInt(vals[0]));
Queue<TreeNode> q = new LinkedList<>();
q.offer(root);
int i = 1;
ðŸ”¹ Root node create ki aur index 1 se traverse shuru kiya.

while (!q.isEmpty())
ðŸ”¹ Jab tak queue khali na ho

TreeNode curr = q.poll();
ðŸ”¹ Queue ka front nikala

if (!vals[i].equals("null"))
    curr.left = new TreeNode(Integer.parseInt(vals[i]));
    q.offer(curr.left);

i++;

if (!vals[i].equals("null"))
    curr.right = new TreeNode(Integer.parseInt(vals[i]));
    q.offer(curr.right);

i++;
ðŸ”¹ Left & right child assign kiya aur queue mein daal diya.

Example:
Input: root = [1,2,3,null,null,4,5]

serialize() â†’ "1,2,3,null,null,4,5,null,null,null,null,"
deserialize() â†’ Tree structure wapas same ban jaata hai

Time and Space Complexity
Operation	Time	Space
Serialize	O(n)	O(n)
Deserialize	O(n)	O(n)

ðŸ”— Facing any issue or want more Java tricks?
https://www.linkedin.com/in/saurabh884095/