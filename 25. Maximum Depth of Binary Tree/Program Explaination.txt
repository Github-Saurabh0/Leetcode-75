Leetcode 104: Maximum Depth of Binary Tree - Java Solution (0ms, O(n) time)

-------------------------------------------

âœ… Java Code:

class Solution {
    public int maxDepth(TreeNode root) {
        if (root == null) return 0;           // base case: agar node null hai, depth 0
        int leftDepth = maxDepth(root.left);  // left subtree ki depth nikalte hain
        int rightDepth = maxDepth(root.right);// right subtree ki depth nikalte hain
        return 1 + Math.max(leftDepth, rightDepth);  // current node ki depth = 1 + max(left, right)
    }
}

-------------------------------------------

ðŸ§  Explanation Line by Line:

if (root == null) return 0;
â†’ Agar node null hai to depth 0 samjho.

int leftDepth = maxDepth(root.left);
â†’ Left subtree ki depth recursively nikalte hain.

int rightDepth = maxDepth(root.right);
â†’ Right subtree ki depth recursively nikalte hain.

return 1 + Math.max(leftDepth, rightDepth);
â†’ Current node ki depth hai 1 plus jo bada hai left aur right subtree mein.

ðŸ“Œ Example:
Input: root = [3,9,20,null,null,15,7]
Output: 3

For any doubt or help, feel free to connect:
ðŸ”— https://www.linkedin.com/in/saurabh884095/