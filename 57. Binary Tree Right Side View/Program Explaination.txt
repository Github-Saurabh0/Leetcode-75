âœ… Java Code (Clean, Fast, Accurate Parsing)

import java.util.*;

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if (root == null) return result;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);

        while (!queue.isEmpty()) {
            int levelSize = queue.size();
            Integer lastNodeVal = null;

            for (int i = 0; i < levelSize; i++) {
                TreeNode curr = queue.poll();
                lastNodeVal = curr.val;

                if (curr.left != null) queue.offer(curr.left);
                if (curr.right != null) queue.offer(curr.right);
            }

            result.add(lastNodeVal);
        }

        return result;
    }
}


ðŸ“˜ Explanation (Line-by-Line)

List<Integer> result = new ArrayList<>();
ðŸ”¹ Final answer store karne ke liye list banayi.

if (root == null) return result;
ðŸ”¹ Agar root hi null hai, toh empty list return kar do.

Queue<TreeNode> queue = new LinkedList<>();
queue.offer(root);
ðŸ”¹ BFS ke liye queue banayi aur root ko queue mein daala.

while (!queue.isEmpty())
ðŸ”¹ Level order traversal tab tak chalega jab tak queue empty nahi ho jati.

int levelSize = queue.size();
ðŸ”¹ Current level mein kitne nodes hain uska size liya.

for (int i = 0; i < levelSize; i++)
ðŸ”¹ Poore current level ke nodes ko process karenge.

TreeNode curr = queue.poll();
ðŸ”¹ Queue se ek node nikala.

lastNodeVal = curr.val;
ðŸ”¹ Last node of this level ka value store kiya (rightmost node).

if (curr.left != null) queue.offer(curr.left);
if (curr.right != null) queue.offer(curr.right);
ðŸ”¹ Left aur right child queue mein daale.

result.add(lastNodeVal);
ðŸ”¹ Har level ke last node ko result list mein daal diya.

ðŸ§  Example

Input:

      1
     / \
    2   3
     \   \
      5   4
Right side view = [1, 3, 4]

âœ… Output: [1, 3, 4]

ðŸš€ Time and Space Complexity

Time: O(n) â†’ Traverse each node once
Space: O(n) â†’ Queue + result list

ðŸ”— If any need please ask me:
https://www.linkedin.com/in/saurabh884095/