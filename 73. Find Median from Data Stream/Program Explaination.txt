Leetcode 295. Find Median from Data Stream 


import java.util.PriorityQueue;
import java.util.Collections;

public class MedianFinder {
    private PriorityQueue<Integer> maxHeap; // left half
    private PriorityQueue<Integer> minHeap; // right half

    public MedianFinder() {
        maxHeap = new PriorityQueue<>(Collections.reverseOrder()); // Max Heap
        minHeap = new PriorityQueue<>(); // Min Heap
    }

    public void addNum(int num) {
        if (maxHeap.isEmpty() || num <= maxHeap.peek())
            maxHeap.offer(num);
        else
            minHeap.offer(num);

        // Balance the heaps
        if (maxHeap.size() > minHeap.size() + 1)
            minHeap.offer(maxHeap.poll());
        else if (minHeap.size() > maxHeap.size())
            maxHeap.offer(minHeap.poll());
    }

    public double findMedian() {
        if (maxHeap.size() == minHeap.size())
            return (maxHeap.peek() + minHeap.peek()) / 2.0;
        return maxHeap.peek();
    }
}

Explanation:
Top Level Concept:
Ham 2 heaps use karte hain:

maxHeap: left side ka max track karega (lower half of numbers)

minHeap: right side ka min track karega (upper half of numbers)
Isse hum efficiently middle values track kar sakte hain.

PriorityQueue<Integer> maxHeap = ... reverseOrder()
â†’ Max heap banayi, jisme bada number pehle aaye (left half).

PriorityQueue<Integer> minHeap = new PriorityQueue<>();
â†’ Min heap banayi (right half), jisme chhota number pehle aaye.

addNum(int num)
â†’ Naya number insert karne ke liye function.
â†’ Agar number maxHeap ke top se chhota hai, toh left mein daal do, otherwise right mein.

Balance the heaps
â†’ Dono heaps ki size difference max 1 honi chahiye.
â†’ Agar kisi side zyada ho gaya, toh ek element dusre mein daal do.

findMedian()
â†’ Agar dono heap ki size barabar hai â†’ median = average of both tops.
â†’ Agar maxHeap bada hai â†’ median = maxHeap ka top.

Example:

MedianFinder mf = new MedianFinder();
mf.addNum(1);
mf.addNum(2);
System.out.println(mf.findMedian()); // 1.5
mf.addNum(3);
System.out.println(mf.findMedian()); // 2


ðŸ”— Need more help or Java tricks?
https://www.linkedin.com/in/saurabh884095/